<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>使用GitHub+Hexo搭建个人Blob</title>
    <link href="/2024/10/18/%E4%BD%BF%E7%94%A8Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BABlog/"/>
    <url>/2024/10/18/%E4%BD%BF%E7%94%A8Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BABlog/</url>
    
    <content type="html"><![CDATA[<h2 id="1-GitHub环境准备"><a href="#1-GitHub环境准备" class="headerlink" title="1. GitHub环境准备"></a>1. GitHub环境准备</h2><h3 id="1-1-创建Repo"><a href="#1-1-创建Repo" class="headerlink" title="1.1 创建Repo"></a>1.1 创建Repo</h3><blockquote><p>注意：此处<em><strong>username.github.io</strong></em>中的<em><strong>username</strong></em>和您使用的github的<em><strong>account name</strong></em>应是一样的，要不然deploy之后会出现404 </p></blockquote><p><img src="https://note.youdao.com/yws/public/resource/7578cb1a1267ca6cc053b980e7af661d/xmlnote/WEBRESOURCE7e5fdc6cac2f4e1a0ee944c1ef14c9e0/9159" alt="GitHub-Repo"></p><h3 id="1-2-配置ssh-key"><a href="#1-2-配置ssh-key" class="headerlink" title="1.2 配置ssh key"></a>1.2 配置ssh key</h3><p>此处可以在网络上搜索到不少参考，就不在此处赘述了。</p><h2 id="2-安装必要软件"><a href="#2-安装必要软件" class="headerlink" title="2. 安装必要软件"></a>2. 安装必要软件</h2><blockquote><p>此处，本人所运行的环境为windows + WSL, nodeJS和Hexo都安装在WSL的Ubuntu里面,以下的命令也都为ubuntu命令</p></blockquote><h3 id="2-1-安装Git"><a href="#2-1-安装Git" class="headerlink" title="2.1 安装Git"></a>2.1 安装Git</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt install -y git<br></code></pre></td></tr></table></figure><h3 id="2-2-安装Node-js和npm"><a href="#2-2-安装Node-js和npm" class="headerlink" title="2.2 安装Node.js和npm"></a>2.2 安装Node.js和npm</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt update<br><span class="hljs-built_in">sudo</span> apt install nodejs npm<br></code></pre></td></tr></table></figure><p>安装完成后运行下面的命令，验证安装：<br>执行：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">node <span class="hljs-comment">--version</span><br></code></pre></td></tr></table></figure><p>输出node.js的版本：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">v18</span>.<span class="hljs-number">19</span>.<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>执行：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm <span class="hljs-comment">--version</span><br></code></pre></td></tr></table></figure><p>输出npm的版本：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">9</span>.<span class="hljs-number">2</span>.<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h3 id="2-3-安装Hexo与初始化"><a href="#2-3-安装Hexo与初始化" class="headerlink" title="2.3 安装Hexo与初始化"></a>2.3 安装Hexo与初始化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm install -g hexo-cli<br></code></pre></td></tr></table></figure><p>安装完成后，在电脑的某个地方新建一个文件夹（名字可以随便取）专门用于存放博客代码，比如我的是 <code>C:\Users\ext_xinweihana\Documents\Blogs</code>，由于这个文件夹将来存放博客的所有内容和素材，以及所有的博客操作都会在其中完成，所以最好不要随便放。</p><p>进入新建的博客目录，输入如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">cd</span> /mnt/c/Users/ext_xinweihana/Documents/Blogs<br>$ hexo init <span class="hljs-comment"># 该命令完成 hexo 在本地博客目录的初始化</span><br></code></pre></td></tr></table></figure><h2 id="3-Hexo的配置与部署到Github"><a href="#3-Hexo的配置与部署到Github" class="headerlink" title="3. Hexo的配置与部署到Github"></a>3. Hexo的配置与部署到Github</h2><h3 id="3-1-生成静态文件"><a href="#3-1-生成静态文件" class="headerlink" title="3.1 生成静态文件"></a>3.1 生成静态文件</h3><p>输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo g <span class="hljs-comment"># 生成静态文件</span><br></code></pre></td></tr></table></figure><p>执行以上命令后，会在博客所在目录下的<code>public</code> 文件夹中生成相关的 <code>html</code> 文件，这些文件将来都是要提交到 <code>GitHub</code> 上的 <code>username.github.io</code> 的仓库中去的。</p><h3 id="3-2-本地预览"><a href="#3-2-本地预览" class="headerlink" title="3.2 本地预览"></a>3.2 本地预览</h3><p>输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo s <span class="hljs-comment"># 开启本地预览</span><br></code></pre></td></tr></table></figure><p><code>hexo s</code> 是开启本地预览服务，打开浏览器访问 <code>http://localhost:4000</code> 即可看到内容，<code>Ctrl+C</code> 停止本地预览。本地预览可以实时查看博客的编辑情况，待博客写完后一起部署到 <code>GitHub</code> 上。</p><p>第一次初始化的时候 <code>hexo</code> 已经帮我们写了一篇名为 Hello World 的文章，默认的主题比较丑。</p><h3 id="3-3-上传部署到-GitHub"><a href="#3-3-上传部署到-GitHub" class="headerlink" title="3.3 上传部署到 GitHub"></a>3.3 上传部署到 GitHub</h3><h4 id="3-3-1-配置站点配置文件"><a href="#3-3-1-配置站点配置文件" class="headerlink" title="3.3.1 配置站点配置文件"></a>3.3.1 配置站点配置文件</h4><p><code>hexo</code> 有 2 种 <code>_config.yml</code> 文件，一个是博客所在根目录下的全局的 <code>_config.yml</code>，一个是各个主体 <code>theme</code> 下的 <code>_config.yml</code>。将前者称为站点配置文件， 后者称为主题配置文件。</p><p>打开根目录下站点配置文件 <code>_config.yml</code>，配置有关 <code>deploy</code> 的部分：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Deployment</span><br><span class="hljs-comment">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">git@github.com:zhangak0214/zhangak0214.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">main</span><br></code></pre></td></tr></table></figure><h4 id="3-3-2-安装部署所必要的插件"><a href="#3-3-2-安装部署所必要的插件" class="headerlink" title="3.3.2 安装部署所必要的插件"></a>3.3.2 安装部署所必要的插件</h4><p>输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm install hexo-deployer-git --save <span class="hljs-comment"># 安装部署插件</span><br></code></pre></td></tr></table></figure><p>如果不进行上述操作，直接使用 <code>hexo d</code> 部署到 <code>GitHub</code>，将会报错。</p><h4 id="3-3-3-部署到-GitHub"><a href="#3-3-3-部署到-GitHub" class="headerlink" title="3.3.3 部署到 GitHub"></a>3.3.3 部署到 GitHub</h4><p>在博客所在的根目录中输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo clean &amp;&amp; hexo deploy <span class="hljs-comment">##可简写为 hexo c &amp;&amp; hexo d</span><br></code></pre></td></tr></table></figure><p>等待部署成功后，打开对应的网址 <code>https://username.github.io</code>，如果出现了和本地预览一样的效果，那么，表明部署成功。</p><h2 id="4-一些问题及优化"><a href="#4-一些问题及优化" class="headerlink" title="4. 一些问题及优化"></a>4. 一些问题及优化</h2><h3 id="4-1-LF-will-be-replaced-by-CRLF"><a href="#4-1-LF-will-be-replaced-by-CRLF" class="headerlink" title="4.1 LF will be replaced by CRLF"></a>4.1 LF will be replaced by CRLF</h3><p>如果这里出现了下面这样的情况：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs none">warning: LF will be replaced by CRLF in<br></code></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/7578cb1a1267ca6cc053b980e7af661d/xmlnote/WEBRESOURCE7fbfa5855daba647c0aa087c9d31b161/9169" alt="Warning Info"></p><p>直接执行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global core.safecrlf <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><p>参考：<a href="https://stackoverflow.com/questions/5834014/lf-will-be-replaced-by-crlf-in-git-what-is-that-and-is-it-important">stackoverflow</a></p><h3 id="4-2-Github-仓库的-README-md-被渲染了了-README-html"><a href="#4-2-Github-仓库的-README-md-被渲染了了-README-html" class="headerlink" title="4.2 Github 仓库的 README.md 被渲染了了 README.html"></a>4.2 Github 仓库的 README.md 被渲染了了 README.html</h3><p>这个我们知道是不应该被渲染的。这里的话，hexo 也提供了一个选项，那就是在根目录下的 <code>_config.yaml</code> 中加上这样一个配置，</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">skip_render:</span> <span class="hljs-string">README.md</span><br></code></pre></td></tr></table></figure><p>这样 hexo 在渲染时就会跳过这个 README 的 md 文件，然后我们在 <code>hexo d</code> 之后就可以直接在仓库的首页看到这个 README 了。</p><h3 id="4-3-将-fluid-主题的滚动条设置为无圆角"><a href="#4-3-将-fluid-主题的滚动条设置为无圆角" class="headerlink" title="4.3 将 fluid 主题的滚动条设置为无圆角"></a>4.3 将 fluid 主题的滚动条设置为无圆角</h3><p>在 <code>source/css/custom.css</code> 中添加如下样式代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* 将进度条的圆角去掉 */</span><br>::-webkit-scrollbar-thumb &#123;<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>到这里，基本的博客就搭建完成了。下一篇博客介绍更换主题以及主题的相关配置。</p>]]></content>
    
    
    
    <tags>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/1970/01/01/hello-world/"/>
    <url>/1970/01/01/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>example</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
